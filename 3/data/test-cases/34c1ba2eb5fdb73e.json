{"uid":"34c1ba2eb5fdb73e","name":"Webhook Notification","fullName":"Webhook Notification#Webhook Notification","historyId":"a77446fd-bef5-4170-a41a-a30eeb5e2bc2","time":{"start":1712338307562,"stop":1712338307574,"duration":12},"description":"## Verifying Webhook signature\n\nBudpay returns the following in your request headers.\n\n*   payloadSignature - SHA512(PAYLOAD) using your secret key\n*   merchantSignature - SHA512(PUBLIC KEY) using your secret key\n*   timestamp - date and time at the point of sending webhook\n    \n\nKindly verify if the value got is the same value sent before processing the webhook request. If they are not the same, you can discard the request.","descriptionHtml":"## Verifying Webhook signature<br><br>Budpay returns the following in your request headers.<br><br>   payloadSignature - SHA512(PAYLOAD) using your secret key<br>   merchantSignature - SHA512(PUBLIC KEY) using your secret key<br>   timestamp - date and time at the point of sending webhook<br>    <br><br>Kindly verify if the value got is the same value sent before processing the webhook request. If they are not the same, you can discard the request.","status":"broken","statusMessage":"getaddrinfo ENOTFOUND {{your_webhook_url}}","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"## Verifying Webhook signature\n\nBudpay returns the following in your request headers.\n\n*   payloadSignature - SHA512(PAYLOAD) using your secret key\n*   merchantSignature - SHA512(PUBLIC KEY) using your secret key\n*   timestamp - date and time at the point of sending webhook\n    \n\nKindly verify if the value got is the same value sent before processing the webhook request. If they are not the same, you can discard the request.","descriptionHtml":"## Verifying Webhook signature<br><br>Budpay returns the following in your request headers.<br><br>   payloadSignature - SHA512(PAYLOAD) using your secret key<br>   merchantSignature - SHA512(PUBLIC KEY) using your secret key<br>   timestamp - date and time at the point of sending webhook<br>    <br><br>Kindly verify if the value got is the same value sent before processing the webhook request. If they are not the same, you can discard the request.","status":"broken","statusMessage":"getaddrinfo ENOTFOUND {{your_webhook_url}}","steps":[],"attachments":[{"uid":"81bf3726bc63d766","name":"Request Headers","source":"81bf3726bc63d766.json","type":"application/json","size":665},{"uid":"56e2f1af7f710697","name":"Request Body","source":"56e2f1af7f710697.txt","type":"text/plain","size":982}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Webhook Notification"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - http://{{your_webhook_url}}/"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"34c1ba2eb5fdb73e.json","parameterValues":["POST - http://{{your_webhook_url}}/"]}