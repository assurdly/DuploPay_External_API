{
	"info": {
		"_postman_id": "337a977c-e6e7-4297-b904-bd7f70a601a7",
		"name": "Duplo S2S",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Test Encryption",
			"item": [
				{
					"name": "Successful - Test Encryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1fb89ee-4188-4a90-b8b2-52ed48e5f7ac",
								"exec": [
									"pm.collectionVariables.set(\"card\", responseBody);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK''\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "1ddf195f-3a66-4b4c-b967-b4a9b4b3bca0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"5534150000127834\",\r\n        \"expiryMonth\": \"10\",\r\n        \"expiryYear\": \"25\",\r\n        \"cvv\" : \"416\",\r\n        \"pin\": \"1234\"\r\n    },\r\n    \"reference\": \"20230102091834835846534888\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/encryption/",
						"description": "**Request**\n\ndata: *kindly provide the card details as seen in the sample*\n\nreference: *this must be at least 16 strings long, this stand as the IV key for the encryption. Incase the string is longer than 16, kindly cut out the first 16 strings.*\n\nencryption mode: *aes-128-cbc*\n\nencryption key: your budpay public key"
					},
					"response": [
						{
							"id": "10c73a89-7d58-4af6-9de1-b7e8158171cc",
							"name": "Test Encryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"4111111111111111\",\r\n        \"expiryMonth\": \"12\",\r\n        \"expiryYear\": \"31\",\r\n        \"cvv\" : \"111\"\r\n    },\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/encryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f"
						}
					]
				},
				{
					"name": "Empty Number Field - Test Encryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1fb89ee-4188-4a90-b8b2-52ed48e5f7ac",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The data.number field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The data.number field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "86fb743d-b8f9-427c-86ee-9847fd21c62e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"\",\r\n        \"expiryMonth\": \"10\",\r\n        \"expiryYear\": \"25\",\r\n        \"cvv\" : \"416\",\r\n        \"pin\": \"1234\"\r\n    },\r\n    \"reference\": \"202212064539049039343\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/encryption/",
						"description": "**Request**\n\ndata: *kindly provide the card details as seen in the sample*\n\nreference: *this must be at least 16 strings long, this stand as the IV key for the encryption. Incase the string is longer than 16, kindly cut out the first 16 strings.*\n\nencryption mode: *aes-128-cbc*\n\nencryption key: your budpay public key"
					},
					"response": [
						{
							"id": "f3da1961-c449-4ae9-bc66-45582b3b03ea",
							"name": "Test Encryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"4111111111111111\",\r\n        \"expiryMonth\": \"12\",\r\n        \"expiryYear\": \"31\",\r\n        \"cvv\" : \"111\"\r\n    },\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/encryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f"
						}
					]
				},
				{
					"name": "Empty Expirymonth Field - Test Encryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1fb89ee-4188-4a90-b8b2-52ed48e5f7ac",
								"exec": [
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The data.expiry month must be a string.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The data.expiry month must be a string.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3e6b512e-d594-49a2-8db3-0361be1ac4cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"5534150000127834\",\r\n        \"expiryMonth\": \"\",\r\n        \"expiryYear\": \"25\",\r\n        \"cvv\" : \"416\",\r\n        \"pin\": \"1234\"\r\n    },\r\n    \"reference\": \"202212064539049039343\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/encryption/",
						"description": "**Request**\n\ndata: *kindly provide the card details as seen in the sample*\n\nreference: *this must be at least 16 strings long, this stand as the IV key for the encryption. Incase the string is longer than 16, kindly cut out the first 16 strings.*\n\nencryption mode: *aes-128-cbc*\n\nencryption key: your budpay public key"
					},
					"response": [
						{
							"id": "e5108c63-f89a-4af7-bfc9-ab905cd9a2aa",
							"name": "Test Encryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"4111111111111111\",\r\n        \"expiryMonth\": \"12\",\r\n        \"expiryYear\": \"31\",\r\n        \"cvv\" : \"111\"\r\n    },\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/encryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f"
						}
					]
				},
				{
					"name": "Empty Expiryyear Field - Test Encryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1fb89ee-4188-4a90-b8b2-52ed48e5f7ac",
								"exec": [
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The data.expiry year field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The data.expiry year field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2c6cc27a-9b32-4783-acdc-8de1e53abe7f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"5534150000127834\",\r\n        \"expiryMonth\": \"10\",\r\n        \"expiryYear\": \"\",\r\n        \"cvv\" : \"416\",\r\n        \"pin\": \"1234\"\r\n    },\r\n    \"reference\": \"202212064539049039343\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/encryption/",
						"description": "**Request**\n\ndata: *kindly provide the card details as seen in the sample*\n\nreference: *this must be at least 16 strings long, this stand as the IV key for the encryption. Incase the string is longer than 16, kindly cut out the first 16 strings.*\n\nencryption mode: *aes-128-cbc*\n\nencryption key: your budpay public key"
					},
					"response": [
						{
							"id": "c2aea8d7-590f-4fb9-a021-4ab384ebc2e7",
							"name": "Test Encryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"4111111111111111\",\r\n        \"expiryMonth\": \"12\",\r\n        \"expiryYear\": \"31\",\r\n        \"cvv\" : \"111\"\r\n    },\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/encryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f"
						}
					]
				},
				{
					"name": "Empty CVV Field - Test Encryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1fb89ee-4188-4a90-b8b2-52ed48e5f7ac",
								"exec": [
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The data.cvv field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The data.cvv field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "31c3b439-7d92-4f56-ae39-7bfb4c033159",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"5534150000127834\",\r\n        \"expiryMonth\": \"10\",\r\n        \"expiryYear\": \"25\",\r\n        \"cvv\" : \"\",\r\n        \"pin\": \"1234\"\r\n    },\r\n    \"reference\": \"202212064539049039343\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/encryption/",
						"description": "**Request**\n\ndata: *kindly provide the card details as seen in the sample*\n\nreference: *this must be at least 16 strings long, this stand as the IV key for the encryption. Incase the string is longer than 16, kindly cut out the first 16 strings.*\n\nencryption mode: *aes-128-cbc*\n\nencryption key: your budpay public key"
					},
					"response": [
						{
							"id": "a6e5280b-a50c-4349-a4f2-0949476075fa",
							"name": "Test Encryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"4111111111111111\",\r\n        \"expiryMonth\": \"12\",\r\n        \"expiryYear\": \"31\",\r\n        \"cvv\" : \"111\"\r\n    },\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/encryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f"
						}
					]
				},
				{
					"name": "Empty Reference Field - Test Encryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1fb89ee-4188-4a90-b8b2-52ed48e5f7ac",
								"exec": [
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The reference field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The reference field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cc68626b-247d-437d-94da-10d63c85d21d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"5534150000127834\",\r\n        \"expiryMonth\": \"10\",\r\n        \"expiryYear\": \"25\",\r\n        \"cvv\" : \"416\",\r\n        \"pin\": \"1234\"\r\n    },\r\n    \"reference\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/encryption/",
						"description": "**Request**\n\ndata: *kindly provide the card details as seen in the sample*\n\nreference: *this must be at least 16 strings long, this stand as the IV key for the encryption. Incase the string is longer than 16, kindly cut out the first 16 strings.*\n\nencryption mode: *aes-128-cbc*\n\nencryption key: your budpay public key"
					},
					"response": [
						{
							"id": "ee75aa41-4c7b-4b38-9334-e8dd6f643a99",
							"name": "Test Encryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :{\r\n        \"number\": \"4111111111111111\",\r\n        \"expiryMonth\": \"12\",\r\n        \"expiryYear\": \"31\",\r\n        \"cvv\" : \"111\"\r\n    },\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/encryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f"
						}
					]
				}
			],
			"id": "d57015ef-323d-424e-8320-8f0e691cea4a"
		},
		{
			"name": "Initialize Transaction",
			"item": [
				{
					"name": "Successful - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Verify that status is 'true'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Proceed authentication'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Proceed authentication\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "d015651f-75cf-4bbe-92e7-875694b30437",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"20230102091834835846534888\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "995b4cc3-375f-41b9-b692-5e602874e034",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "3effbc72-b2a8-4a55-bfb9-a6470ef204a2",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "f1d0631f-6df7-42f9-851f-c5639edf6c77",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Existing Reference - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that status is 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Reference Already Exist'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Reference Already Exist\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "85ed85a3-7f07-4f58-aedc-5c23681628e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"20240316091834835846534931\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "1c4af5a9-62b7-4254-b828-2ef5c611a373",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "7674caae-19b3-471b-a9b6-7ca2531fbe64",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "240f8dfd-afa0-4701-92a7-7bade6070cd9",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Email field - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'The email field is required'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The email field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3dd7b22d-5cf7-4e41-8a7a-ba08568c140f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"20220930091834835846534939\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "bd01b550-90a2-40b6-9ba1-11e4a3d74439",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "e7897554-30c5-40dd-85bf-490d2764a414",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "6a32fe57-b3dd-4452-8f8f-7bb30ad5bd20",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Amount field - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'The amount field is required'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The amount field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "672e6d31-5ccc-47db-8ae1-16e94655073d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"20220930091834835846534939\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "bd745371-9860-4ad2-8cec-4a094b9b691a",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "88b8e1ea-f7b7-4d3d-8fa0-96435c0755fb",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "22ace96d-6251-4fae-8104-60acd97e8199",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Currency field - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'The currency must be a string.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The currency must be a string.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ec1dc685-9553-4315-8388-c0e35f8cc0b9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"\",\r\n    \"reference\": \"20220930091834835846534939\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "44d15524-e7bf-4855-a058-b06831820291",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "3b714962-658e-4f15-9fb0-0c9ea6216b08",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "4684e861-3c50-493f-b77e-426c86e838b4",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Reference field - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'The reference field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The reference field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8ef7e8f3-022d-4bb5-88f2-d2271b94dd47",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "613d758c-250e-493d-82da-a2231f121ee9",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "1cfe55e2-123f-4f60-b5ab-373052f980e3",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "6d5bf442-92d7-46a0-85f9-abc5fd1208d2",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Card field - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'The card field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The card field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1eb372a9-16b2-4c48-9e97-cd1efd667850",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"20220930091834835846534939\",\r\n    \"card\" :\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "6b8177bb-4767-4045-8886-93af5f9a0660",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "dfa3a5b7-3d97-48ec-91fb-2feedd82afe6",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "0af92bc4-a267-4e46-bbb5-0be8022396ab",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Invalid Email - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'The email must be a valid email address.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The email must be a valid email address.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "16dd9eae-4bf3-413e-ac03-9a4443b6e87d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"testemail.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"20220930091834835846534939\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "0bc39fbf-1df2-40fb-8aae-4167f1e21be1",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "147afe2b-b7c8-420a-bc7c-262c2990b72a",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "f03aa307-8b64-44f3-9ebd-5d4b05c05c14",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Negative Amount - Initialize Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a127e8ca-e75b-4854-83f7-df8fd92850ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'Amount cannot be less than 1'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Amount cannot be less than 1\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "abb15553-38a1-43ef-bd7e-27c12f6c9eea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_live_exnd0gxdxftqfmi4gqybwifziqhf6w7x1syz2kw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"-6\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"202209300918348358465\",\r\n    \"card\" :\"{{card}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "1fa995e4-94c5-470b-b23e-afa786c7588a",
							"name": "Initialize Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:49:56 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication\",\n    \"data\": \"<div id=\\\"redirectTo3ds1AcsSimple\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"redirectTo3ds1Frame\\\" name=\\\"redirectTo3ds1Frame\\\" height=\\\"100%\\\" width=\\\"100%\\\" > </iframe> <form id =\\\"redirectTo3ds1Form\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1-indblr-blrtdc.wibmo.com/v1/acs/legacy/live/8528/M.D/uid=fe8637ff-709f-4ecc-b754-9677vG5oS3nS\\\" target=\\\"redirectTo3ds1Frame\\\"> <input type=\\\"hidden\\\" name=\\\"PaReq\\\" value=\\\"eAFVUtlOwzAQfEfiH6KINyB2rjattkbpQYlEUJVDPIfEoqkSp+TowdezTg/AyoNn1h7PzgaeDmWh7Hjd5JWYqLpGVYWLtMpy8TlR4+j50VGf2O0NROua83nI067mDHzeNMknV/IM71Bc9lA3HWo7KoOVG/AvBmdNhpKaAeQC8WqdrhPRMkjSr6n3xmxTHzgDIGcIJa+9OXv33Wk8p1QHciJAJCVnyCne23PghlEQz6I4WCivnu9FCyB9HdKqE219ZPYAJS8Aurpg+/1e++iybXIsuWi1tCqBSB7Ir6VVJ8012OEhz9gmKJtvp4g3mb9c3hdiuF5tq5XwP2bVBIg8AVnScmZQAz9qKbo5tkZjG9vteUhK6YbF4Vy5Mx4wJo1SbPTEwlY+5p6AIUPE2l8OMOsah3FkjoWlKwJ+2FYCe2D40HUP5Nf87EWmm7aY48Wbbloj27DM4XC3tKvQFKFMvD8i9XKMzDCp2QtKAESKkPMwMaJ+4Mj8+xFub34AHU+4dQ==\\\" /> <input type=\\\"hidden\\\" name=\\\"TermUrl\\\" value=\\\"https://eu.gateway.mastercard.com/callbackInterface/gateway/03f3fbc3bf710de48bc2dc9738a75c556852aa5d82c390bea3572ad89fdb57a7\\\" /> <input type=\\\"hidden\\\" name=\\\"MD\\\" value=\\\"\\\" /> </form> <script id=\\\"authenticate-payer-script\\\"> var e=document.getElementById(\\\"redirectTo3ds1Form\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"alt\": \"http://127.0.0.1:8000/mastercard-payment/authpayer/9732854832u8i419138\"\n}"
						},
						{
							"id": "e5786ec4-229e-458a-ada2-235c7e161ae0",
							"name": "Initialize Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"2000\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"9732854832u8i419138\",\r\n    \"card\" :\"7c074ea825a985055d1fa6710ffe1711099508a2a71aea99e861dc30d015128ca2d9058eef972c336b44544c23e30029de681d83a8048b91ef675de4747824d476d73cab7e2ba61beccd3b45ad04c310\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:39:33 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Kindly check your encrypted value\"\n}"
						},
						{
							"id": "75e73503-0f37-4f2c-b33c-67da70196a8d",
							"name": "Initialize Transaction - 3DS2",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"125362787365627635011\",\r\n    \"card\" :\"9cbca2cf6cbfa8f31c7dcc334bad715b29c57f304f544a97dac7416bb7ab5b7dee828bd04a7e17a901a58af9d48513d3eac02acbe1e08cc3feabb6a1983bbf8157054457ab0090518f8a29854cf1bf91\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/transaction/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Date",
									"value": "Thu, 29 Sep 2022 20:54:26 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Proceed authentication 3DS2\",\n    \"data\": \"<div id=\\\"initiate3dsSimpleRedirect\\\" xmlns=\\\"http://www.w3.org/1999/html\\\"> <iframe id=\\\"methodFrame\\\" name=\\\"methodFrame\\\" height=\\\"100\\\" width=\\\"200\\\" > </iframe> <form id =\\\"initiate3dsSimpleRedirectForm\\\" method=\\\"POST\\\" action=\\\"https://secure-acs2ui-b1.wibmo.com/v1/acs/services/threeDSMethod/8528?cardType=M\\\" target=\\\"methodFrame\\\"> <input type=\\\"hidden\\\" name=\\\"threeDSMethodData\\\" value=\\\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9ldS5nYXRld2F5Lm1hc3RlcmNhcmQuY29tL2NhbGxiYWNrSW50ZXJmYWNlL2dhdGV3YXkvOGFkZGRiNzE1MTQwMjk2OWMxMmI1Y2QzNjBhOTdmYTdiZTE1ZWU1NWZiZDEwZTE5MmI3ZDIwNDcxNmQxYTVlNSIsInRocmVlRFNTZXJ2ZXJUcmFuc0lEIjoiZjgxNGM3YWMtMmRiOS00Nzg1LThhMjYtYjA2NjZlYTBjMGVkIn0=\\\" /> </form> <script id=\\\"initiate-authentication-script\\\"> var e=document.getElementById(\\\"initiate3dsSimpleRedirectForm\\\"); if (e) { e.submit(); if (e.parentNode !== null) { e.parentNode.removeChild(e); } } </script> </div>\",\n    \"_links\": {\n        \"url\": \"http://127.0.0.1:8110/api/mastercard-payment/3ds2auth\",\n        \"method\": \"POST\",\n        \"payload\": [\n            \"ref\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"id": "940f398c-27c3-4406-b203-3e03faecd8bf"
		},
		{
			"name": "Initialize Banktransfer Transaction",
			"item": [
				{
					"name": "Successful - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2af48838-0c44-49d0-a447-8a56161590b4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Verify that status returns 'true'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Account generated successfully'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Account generated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "8f5d7306-a7af-4594-b4ef-cd31524d9cc2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"150\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"12536278736599627635{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "4c66d05d-f2ba-4c10-83c5-d99be6ab8f17",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "cc28dfa8-b655-481a-94b2-dc810fd1842e",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				},
				{
					"name": "Existing Reference - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2af48838-0c44-49d0-a447-8a56161590b4",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that status returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Reference Already Exist'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Reference Already Exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f6cc7503-7ddf-4a18-837d-266b2ac55058",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"20220930091834835846534939\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "021d5010-d58f-4de8-892d-a7bca1501221",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "b1c4af00-3ff1-4c81-a38a-24a317110790",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Email Field - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fb0554-73aa-4803-8dd4-bdaca9bd285a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message is 'The email field is required'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The email field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4da63ba5-0e41-41a0-ac9d-727772daf8e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"{{$randomInt}}62787365996276350189\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "d2b870f8-8e92-49e5-8a34-8ee7a20876bd",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "a5c25008-27df-49b4-84c6-a3ec02e3a4fc",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Amount Field - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fb0554-73aa-4803-8dd4-bdaca9bd285a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The amount field is required'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The amount field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "59c0cc0f-4dca-46dd-bca6-bc0d11f86e5a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"{{$randomInt}}62787365996276350189\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "81c63d86-2523-4e12-ac54-db5d2e5e0cf5",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "d4abac03-1e81-4991-bed5-775022a9d271",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Currency Field - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fb0554-73aa-4803-8dd4-bdaca9bd285a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The currency must be a string.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The currency must be a string.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "69757bc5-0236-4fd2-bd67-3c7bb7cfb8a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"\",\r\n    \"reference\": \"{{$randomInt}}62787365996276350189\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "acef3946-fb76-49a5-84db-e01acba6fa80",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "a06d1c32-1b98-47d1-b394-ff547937b53d",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				},
				{
					"name": "Empty Reference Field - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fb0554-73aa-4803-8dd4-bdaca9bd285a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The reference field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The reference field is required.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7b73bc04-6ac5-4582-b01b-2cbb70f40c82",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "5d2dfaa8-e956-4c5e-a7fb-2872173b671c",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "11a27e57-95e0-48a2-92eb-b3eca6ea3cf9",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				},
				{
					"name": "Amount Less Than 100 - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fb0554-73aa-4803-8dd4-bdaca9bd285a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Minimum amount is NGN 100'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Minimum amount is NGN 100\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "43654104-29bc-4d30-b1e4-e891004fbfb5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"90\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"{{$randomInt}}62787365996276350189\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "562612e4-ed2c-4703-a2b7-ce12cb57eb88",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "aad9be0f-f8d6-4ab8-8b42-6635e89bba84",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				},
				{
					"name": "Invalid Email - Initialize Banktransfer Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fb0554-73aa-4803-8dd4-bdaca9bd285a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The email must be a valid email address'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The email must be a valid email address\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "669a3e65-44d7-48c7-93f5-51d6a2fc7c49",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"testemail.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"{{$randomInt}}62787365996276350189\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/banktransfer/initialize",
						"description": "There are three main stages in S2S charge:\n\n1.  *Initiate the payment*: You send the transaction details and the customer's card details to *transaction*/*initialize* endpoints.\n2.  *Authorize the charge*: Render the HTML content returned in data on your payment checkout interface or alternatively redirect to the alt URL. The customer authorizes the charge with their payment provider, such as their card issuer or bank. This completes the payer authentication.\n3.  *Verify the payment*: You'll call our *Verify Transaction API* to verify that the payment was successful before giving value (the *verify transaction* endpoint) or wait to receive webhook notification.\n    \n\n**Request**\n\nemail: *customer email*  \namount: *transaction amount*  \ncurrency: *transaction currency*  \nreference: *unique reference must be atleast 16 unique characters*  \ncard: *Kindly pass the response of the encrypted card reference.*\n\n**Response**\n\ndata: *Kindly render this in the HTML.*\n\nalt: *Incase you are unable to render the data in HTML, you can make use of alt link.*\n\n**Additional Info**\n\nAfter successful transaction, a webhook event will be initiated and sent to the webhook url you set on the dashboard.\n\nYou are expected to call verify transaction endpoint to know the outcome of transaction."
					},
					"response": [
						{
							"id": "032d60fa-a583-4a56-913b-d2433f998f26",
							"name": "Initialize Banktransfer Transaction - Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"1\",\r\n    \"currency\": \"USD\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8177"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:15:54 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"success\": false,\n    \"message\": \"Minimum amount is NGN 100\"\n}"
						},
						{
							"id": "f9feb7e9-c8ed-43ce-b8de-051039d2a79a",
							"name": "Initialize Banktransfer Transaction - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@email.com\",\r\n    \"amount\": \"100\",\r\n    \"currency\": \"NGN\",\r\n    \"reference\": \"125362787365996276350180\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/banktransfer/initialize"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8110"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Jun 2022 21:34:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Account generated successfully\",\n    \"data\": {\n        \"account_name\": \"BudPay Checkout\",\n        \"account_number\": \"1014692362\",\n        \"bank_name\": \"BudPay Bank\"\n    }\n}"
						}
					]
				}
			],
			"id": "f6d46177-98fa-4679-9764-50a16cbb765f"
		},
		{
			"name": "Verify Transaction",
			"item": [
				{
					"name": "Successful - Verify Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f4357fb-d4fe-4973-8317-9699b6ddad4f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Verify that status returns 'true'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Verification successful'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Verification successful\");\r",
									"});\r",
									"pm.test(\"Response contains data with objects having specific properties\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"        pm.expect(responseData.data).to.have.property(\"amount\").that.is.a(\"string\");\r",
									"        pm.expect(responseData.data).to.have.property(\"currency\").that.is.a(\"string\");\r",
									"        pm.expect(responseData.data).to.have.property(\"status\").that.is.a(\"string\");\r",
									"        pm.expect(responseData.data).to.have.property(\"transaction_date\").that.is.a(\"string\");\r",
									"        pm.expect(responseData.data).to.have.property(\"reference\").that.is.a(\"string\");\r",
									"        pm.expect(responseData.data).to.have.property(\"domain\").that.is.a(\"string\");\r",
									"    });\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "da1cd7d3-bd62-4b05-9568-3fbac00f46bc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/verify/125362787365996276350180"
					},
					"response": [
						{
							"id": "a5feff13-9674-4c08-acdc-a6887718ee04",
							"name": "Verify Transaction - Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"url": "{{baseurl}}/transaction/verify/8732854832u8i419138"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 07:40:22 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 07:40:22 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Verification successful\",\n    \"data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"USD\",\n        \"status\": \"pending\",\n        \"transaction_date\": null,\n        \"reference\": \"8732854832u8i419138\",\n        \"domain\": \"test\",\n        \"gateway_response\": null,\n        \"channel\": null,\n        \"ip_address\": null,\n        \"log\": {\n            \"time_spent\": 0,\n            \"attempts\": 0,\n            \"authentication\": null,\n            \"errors\": 0,\n            \"success\": false,\n            \"channel\": null,\n            \"history\": []\n        }\n    },\n    \"fees\": null,\n    \"customer\": {\n        \"id\": 4,\n        \"customer_code\": \"CUS_ctiv4kdyniqtjqe\",\n        \"first_name\": null,\n        \"last_name\": null,\n        \"email\": \"test@email.com\"\n    },\n    \"plan\": null,\n    \"requested_amount\": \"2000\"\n}"
						},
						{
							"id": "4bacd5ea-8375-4cfa-806c-49b52df07cdd",
							"name": "Verify Transaction - Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"url": "{{baseurl}}/transaction/verify/8732854832u8i419138"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:40:04 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": false,\n    \"message\": \"Reference code does not exist\"\n}"
						}
					]
				},
				{
					"name": "Invalid Reference Code - Verify Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f4357fb-d4fe-4973-8317-9699b6ddad4f",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that status returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Reference code does not exist'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Reference code does not exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5c4f5a87-ef9d-4c12-a9d6-b48ea0a5ee18",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/transaction/verify/1253627873659962763501"
					},
					"response": [
						{
							"id": "e0c268eb-3f27-41bf-ba88-d9240503a502",
							"name": "Verify Transaction - Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"url": "{{baseurl}}/transaction/verify/8732854832u8i419138"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 07:40:22 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 07:40:22 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": true,\n    \"message\": \"Verification successful\",\n    \"data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"USD\",\n        \"status\": \"pending\",\n        \"transaction_date\": null,\n        \"reference\": \"8732854832u8i419138\",\n        \"domain\": \"test\",\n        \"gateway_response\": null,\n        \"channel\": null,\n        \"ip_address\": null,\n        \"log\": {\n            \"time_spent\": 0,\n            \"attempts\": 0,\n            \"authentication\": null,\n            \"errors\": 0,\n            \"success\": false,\n            \"channel\": null,\n            \"history\": []\n        }\n    },\n    \"fees\": null,\n    \"customer\": {\n        \"id\": 4,\n        \"customer_code\": \"CUS_ctiv4kdyniqtjqe\",\n        \"first_name\": null,\n        \"last_name\": null,\n        \"email\": \"test@email.com\"\n    },\n    \"plan\": null,\n    \"requested_amount\": \"2000\"\n}"
						},
						{
							"id": "082f3674-281b-4bc8-b3f4-860d8e57f6d8",
							"name": "Verify Transaction - Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"url": "{{baseurl}}/transaction/verify/8732854832u8i419138"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 23 Feb 2022 16:40:04 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": false,\n    \"message\": \"Reference code does not exist\"\n}"
						}
					]
				}
			],
			"id": "78e7c6b4-2a1f-4958-8644-d57464578e37"
		},
		{
			"name": "Test Decryption",
			"item": [
				{
					"name": "Successful - Test Decryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9acdd380-be07-4820-9c49-d5f2ace277a2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Verify that response body returns number\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"number\");\r",
									"});\r",
									"pm.test(\"Verify that response body returns expiryMonth\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"expiryMonth\");\r",
									"});\r",
									"pm.test(\"Verify that response body returns expiryYear\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"expiryYear\");\r",
									"});\r",
									"pm.test(\"Verify that response body returns cvv\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cvv\");\r",
									"});\r",
									"pm.test(\"Verify that response body returns pin\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"pin\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a48265f6-dab4-426a-85bf-766ab71b59f9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :\"{{card}}\",\r\n    \"reference\": \"20230930091834835846534939\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/decryption"
					},
					"response": [
						{
							"id": "ca6a6cda-f1c9-4973-8e25-20a6c10a7bc8",
							"name": "Test Decryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\",\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/decryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\"number\":\"4111111111111111\",\"expiryMonth\":\"12\",\"expiryYear\":\"31\",\"cvv\":\"111\"}"
						}
					]
				},
				{
					"name": "Empty Data Field - Test Decryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9acdd380-be07-4820-9c49-d5f2ace277a2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The data field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The data field is required.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "db3cf799-c9d3-43d0-bc3a-3e1ba2ee46aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :\"\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/decryption"
					},
					"response": [
						{
							"id": "903fd0bc-a722-49e9-9f65-6de43850e3ab",
							"name": "Test Decryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\",\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/decryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\"number\":\"4111111111111111\",\"expiryMonth\":\"12\",\"expiryYear\":\"31\",\"cvv\":\"111\"}"
						}
					]
				},
				{
					"name": "Empty Reference Field - Test Decryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9acdd380-be07-4820-9c49-d5f2ace277a2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'The reference field is required.'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The reference field is required.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3c3acce0-7be6-4f16-bd13-26a82420979e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :\"9e8445b2733c2ef8584c0b7e4e920d53aafe7e4a311ff7a84bc7806336287c603c95f49c78249d67bb4134ce03ac5c73022816b912de44b446d31e3b1a677627317ab7147708918ab6c68b0aaa6606c0\",\r\n    \"reference\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/decryption"
					},
					"response": [
						{
							"id": "34c15c01-2ed0-473f-a963-973a215288e2",
							"name": "Test Decryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\",\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/decryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\"number\":\"4111111111111111\",\"expiryMonth\":\"12\",\"expiryYear\":\"31\",\"cvv\":\"111\"}"
						}
					]
				},
				{
					"name": "Invalid data - Test Decryption",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9acdd380-be07-4820-9c49-d5f2ace277a2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that success returns 'false'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "23c0bd9d-f3d0-409b-8374-1a3b40db704f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{secret_key}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\" :\"9e8445b2733c2ef8584c0b7e4e920d53aafe7e4a311ff7a84bc7806336287c603c95f49c78249d67bb4134ce03ac5c73022816b912de44b446d31e3b1a677627317ab7147708\",\r\n    \"reference\": \"1253627873656276350\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl}}/test/decryption"
					},
					"response": [
						{
							"id": "30389058-c2b5-4c6e-a8e0-137a2ec320a0",
							"name": "Test Decryption - Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "sk_test_aihzgldeizcmuzzu63bqi2dxz7dct3fb36sern6",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\" :\"1ee61b4d6f8f59dab8c326c021d444a6275705e7a308be81fcd9a173795612291cf0a2ece9c2ec3ef7c23b9af52b1cfc77a4d9221bfaf0940ddc3cdef3e3b8c10f70e8f3b89c2ece4ad59a6c05e0975f\",\r\n    \"reference\": \"9732854832u8i419138\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/test/decryption"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Host",
									"value": "127.0.0.1:8000"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Date",
									"value": "Fri, 04 Feb 2022 13:48:35 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.0.13"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=UTF-8"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\"number\":\"4111111111111111\",\"expiryMonth\":\"12\",\"expiryYear\":\"31\",\"cvv\":\"111\"}"
						}
					]
				}
			],
			"id": "1cdbb9f7-6611-4654-a2c5-2b7bec2a01c5"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6537e0b2-7e5c-4f7f-a405-be9f25e7a81e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5f6bc652-9c0e-4b9c-b9fa-2a380c08338b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseurl",
			"value": "https://api.stag.duplopg.com/api/s2s",
			"type": "string"
		},
		{
			"key": "secret_key",
			"value": "sk_test_gmbq9kxqr6bc9otiuk10n5tgzotkoiiq0vagf4y",
			"type": "string"
		},
		{
			"key": "card",
			"value": "",
			"type": "string"
		},
		{
			"key": "reference",
			"value": "",
			"type": "string"
		}
	]
}